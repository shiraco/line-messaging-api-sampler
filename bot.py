# coding: utf-8

import os
LINE_CHANNEL_ACCESS_TOKEN = os.environ.get('LINE_CHANNEL_ACCESS_TOKEN', '')
LINE_CHANNEL_SECRET = os.environ.get('LINE_CHANNEL_SECRET', '')

from flask import Flask, request, abort

from linebot import (
    LineBotApi, WebhookHandler
)
from linebot.exceptions import (
    InvalidSignatureError,
    LineBotApiError
)
from linebot.models import (
    MessageEvent,
    TextMessage, TextSendMessage,
    StickerMessage, StickerSendMessage
)

app = Flask(__name__)

line_bot_api = LineBotApi(LINE_CHANNEL_ACCESS_TOKEN)
handler = WebhookHandler(LINE_CHANNEL_SECRET)

@app.route("/")
def hello_world():
    return "hello world!"

@app.route("/callback", methods=['POST'])
def callback():
    # get X-Line-Signature header value
    signature = request.headers['X-Line-Signature']

    # get request body as text
    body = request.get_data(as_text=True)
    app.logger.info("Request body: " + body)

    # handle webhook body
    try:
        handler.handle(body, signature)
    except InvalidSignatureError:
        abort(400)

    return 'OK'


@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):

    app.logger.debug("event: " + str(event))

    line_bot_api.reply_message(
        event.reply_token,
        TextSendMessage(text=event.message.text))


@handler.add(MessageEvent, message=StickerMessage)
def handle_sticker_message(event):

    app.logger.debug("event: " + str(event))

    SENDABLE_STICKERS = [('1', ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13' ,'14', '15',
                              '16', '17', '21', '100', '101', '102', '103', '104', '105', '106', '107',
                              '108', '109', '110', '111', '112', '113', '114', '115', '116', '117',
                              '118', '119', '120', '121', '122', '123', '124', '125', '126', '127',
                              '128', '129', '130', '131', '132', '133', '134', '135', '136', '137', '138', '139',
                              '401', '402', '403', '404', '405', '406', '407', '408', '409',
                              '410', '411', '412', '413', '414', '415', '416', '417', '418', '419',
                              '420', '421', '422', '423', '424', '425', '426', '427', '428', '429', '430']),
                         ('2', ['18', '19', '20', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31',
                                '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47',
                                '140', '141', '142', '143', '144', '145', '146', '147', '148', '149', '150', '151',
                                '152', '153', '154', '155', '156', '157', '158', '159', '160', '161', '162', '163',
                                '164', '165', '166', '167', '168', '169', '170', '171', '172', '173', '174', '175', '176', '177', '178', '179',
                                '501', '502', '503', '504', '505', '506', '507', '508', '509', '510', '511', '512',
                                '513', '514', '515', '516', '517', '518', '519', '520', '521', '522', '523', '524', '525', '526', '527']),
                         ('3', ['180', '181', '182', '183', '184', '185', '186', '187', '188', '189', '190', '191',
                                '192', '193', '194', '195', '196', '197', '198', '199', '200', '201', '202', '203',
                                '204', '205', '206', '207', '208', '209', '210', '211', '212', '213', '214', '215',
                                '216', '217', '218', '219', '220', '221', '222', '223', '224', '225', '226', '227',
                                '228', '229', '230', '231', '232', '233', '234', '235', '236', '237', '238', '239',
                                '240', '241', '242', '243', '244', '245', '246', '247', '248', '249', '250', '251',
                                '252', '253', '254', '255', '256', '257', '258', '259']),
                         ('4', ['260', '261', '262', '263',
                                '264', '265', '266', '267', '268', '269', '270', '271', '272', '273', '274', '275',
                                '276', '277', '278', '279', '280', '281', '282', '283', '284', '285', '286', '287',
                                '288', '289', '290', '291', '292', '293', '294', '295', '296', '297', '298', '299',
                                '300', '301', '302', '303', '304', '305', '306', '307',
                                '601', '602', '603', '604', '605', '606', '607', '608', '609', '610', '611', '612',
                                '613', '614', '615', '616', '617', '618', '619', '620', '621', '622', '623', '624',
                                '625', '626', '627', '628', '629', '630', '631', '632']),
                         ('11537', ['52002734', '52002735', '52002736', '52002737', '52002738', '52002739', '52002740',
                                    '52002741', '52002742', '52002743', '52002744', '52002745', '52002746', '52002747',
                                    '52002748', '52002749', '52002750', '52002751', '52002752', '52002753', '52002754',
                                    '52002755', '52002756', '52002757', '52002758', '52002759', '52002760', '52002761',
                                    '52002762', '52002763', '52002764', '52002765', '52002766', '52002767', '52002768',
                                    '52002769', '52002770', '52002771', '52002772', '52002773']),
                         ('11538', ['51626494', '51626495', '51626496', '51626497', '51626498', '51626499', '51626500',
                                    '51626501', '51626502', '51626503', '51626504', '51626505', '51626506', '51626507',
                                    '51626508', '51626509', '51626510', '51626511', '51626512', '51626513', '51626514',
                                    '51626515', '51626516', '51626517', '51626518', '51626519', '51626520', '51626521',
                                    '51626522', '51626523', '51626524', '51626525', '51626526', '51626527', '51626528',
                                    '51626529', '51626530', '51626531', '51626532', '51626533']),
                         ('11539', ['52114110', '52114111', '52114112', '52114113', '52114114', '52114115', '52114116',
                                    '52114117', '52114118', '52114119', '52114120', '52114121', '52114122', '52114123',
                                    '52114124', '52114125', '52114126', '52114127', '52114128', '52114129', '52114130',
                                    '52114131', '52114132', '52114133', '52114134', '52114135', '52114136', '52114137',
                                    '52114138', '52114139', '52114140', '52114141', '52114142', '52114143', '52114144',
                                    '52114145', '52114146', '52114147', '52114148', '52114149'])]

    stickers = [(sendables[0], sticker_id) for sendables in SENDABLE_STICKERS for sticker_id in sendables[1]]
    package_id, sticker_id = event.message.package_id, event.message.sticker_id

    app.logger.debug((package_id, sticker_id))

    if (package_id, sticker_id) in stickers:
        line_bot_api.reply_message(
            event.reply_token,
            StickerSendMessage(package_id=package_id,
                               sticker_id=sticker_id))

    else:
        line_bot_api.reply_message(
            event.reply_token,
            TextSendMessage(text='not support sticker'))


if __name__ == "__main__":
    app.run()
